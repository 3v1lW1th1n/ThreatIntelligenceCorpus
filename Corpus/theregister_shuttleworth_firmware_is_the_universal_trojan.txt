Shuttleworth: Firmware is the universal Trojan
Canonical boss Mark Shuttleworth has called on the world to abandon proprietary firmware code, calling all such code “a threat vector”.
In this blog post, Shuttleworth makes the case that manufacturers are simply too incompetent, and attackers (including government security agencies) too competent, for security-by-obscurity in firmware to ever work.
“Any firmware code running on your phone, tablet, PC, TV, wifi router, washing machine, server, or the server running the cloud your SaaS app is running on” is a threat, he writes, calling on the industry to abandon secret firmware entirely.
“Arguing for ACPI on your next-generation device is arguing for a trojan horse of monumental proportions to be installed in your living room and in your data centre. I’ve been to Troy, there is not much left,” he continues.
Certainly, there's plenty of evidence out there to support Shuttleworth's concerns. Widespread router vulnerabilities like the Linksys bug, HP's “printer firebomb” bug in 2012, Belkin's home automation bug, and hard-coded SCADA passwords all show how easy it is for experts to identify weak firmware.
Shuttleworth wants the industry to take two specific actions. Using Linux as his starting point – naturally enough – he writes that firmware should no longer include executable code. He writes: “Declarative firmware that describes hardware linkages and dependencies but doesn’t include executable code is the best chance we have of real bottom-up security.”
“Upstream kernel is the place to deliver the software portion of the innovation you’re selling,” he says, something that would help improve end-user security. ®

Sponsored: 
Following Bottomline’s journey to the Hybrid Cloud

