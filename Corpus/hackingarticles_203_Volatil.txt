
Volatility – An advanced memory forensics framework

The Volatility Framework is a completely open collection of tools, implemented in Python under the GNU General Public License, for the extraction of digital artifacts from volatile memory (RAM) samples. The extraction techniques are performed completely independent of the system being investigated but offer unprecedented visibility into the runtime state of the system. The framework is intended to introduce people to the techniques and complexities associated with extracting digital artifacts from volatile memory samples and provide a platform for further work into this exciting area of research.
Basic / Informational
Processes
Kernel Memory
GUI Memory
Malware Analysis
Networking
Miscellaneous
Before you can conduct victim system analysis you need to capture memory.
Step 1: First Download dumpit and capture victim pc memory (How to use Dumpit)
Step2: Download Volatility for windows PC from here
Step3: Now Open Volatility from command prompt and use the Following Commands
If you don’t know what type of system your image came from, use the imageinfo command
volatility.exe –f (Windows Dump Path) imageinfo

To list the processes of a system, use the pslist command. This walks the doubly-linked list pointed to by PsActive Process Head. It does not detect hidden or unlinked processes.
volatility.exe –f (Windows Dump Path) pslist

To enumerate processes using pool tag scanning, use the psscan command. This can find processes that previously terminated (inactive) and processes that have been hidden or unlinked by a rootkit.
volatility.exe –f (Windows Dump Path) psscan

To display a process’s loaded DLLs, use the dlllist command. It walks the doubly-linked list of LDR_DATA_TABLE_ENTRY structures which is pointed to by the PEB’s In Load Order Module List. DLLs are automatically added to this list when a process calls LoadLibrary (or some derivative such as LdrLoadDll) and they aren’t removed until Free Library is called and the reference count reaches zero.
volatility.exe –f (Windows Dump Path) dlllist

To view the SIDs (Security Identifiers) associated with a process, use the getsids command. Among other things, this can help you identify processes which have maliciously escalated privileges.
volatility.exe –f (Windows Dump Path) getsids

To detect listening sockets for any protocol (TCP, UDP, RAW, etc), use the sockets command. This walks a singly-linked list of socket structures which is pointed to by a non-exported symbol in the tcpip.sys module. This command is for Windows XP and Windows 2003 Server only.
volatility.exe –f (Windows Dump Path) sockets

To locate the virtual addresses of registry hives in memory, and the full paths to the corresponding hive on disk, use the hivelist command.
volatility.exe –f (Windows Dump Path) hivelist

To get the UserAssist keys from a sample you can use the userassist plugin.
volatility.exe –f (Windows Dump Path) userassist

Volatility is the only memory forensics framework with the ability to list Windows services. To see which services are registered on your memory image, use the svcscan command. The output shows the process ID of each service (if its active and pertains to a usermode process), the service name, service display name, service type, and current status. It also shows the binary path for the registered service – which will be an EXE for usermode services and a driver name for services that run from kernel mode
volatility.exe –f (Windows Dump Path) svcscan

 Command Reference & More Commands Visit: 
http://code.google.com/p/volatility/wiki/CommandReference
