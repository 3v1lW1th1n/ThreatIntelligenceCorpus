Opera 16 Fixes Bugs, Improves HTML5 Performance
Norwegian software company Opera pushed out version 16 of its eponymous Internet browser this week, complete with what it’s calling “tons of bug fixes,” improved performance and a slew of new features and APIs.
While the full changelog hasn’t been published yet, Ruarí Ødegaard, a member of Opera’s desktop team, pointed out that a handful of the bugs were addressed earlier this month, including fixing how the browser crashed following the opening of a new tab after closing a certificate/authentication dialog and restricting the browser’s auto fill capabilities when it comes to entering credit card credentials. Ødegaard also notes the browser can now check for new versions of “updateable components” when it’s started.
Until the changelog is published, it’s unclear just how many bugs Opera 16 fixes – but at least 13 of them, including the three above, were fixed earlier this month.
The browser has also added support for W3C’s Geolocation API, letting the user decide if they want to share their location with location-aware services such as Foursquare much like Chrome and Firefox. The Opera team has also added support for Windows jump lists, a set of internal Flags for developers and improved HTML5 support.
Opera 16 has also updated its Engine to Chromium 29 and fine-tuned its “form filler” autofill settings.
With the switch to Chromium 29, Opera will now support chrome.cookies and chrome.history APIs, adding to the Chromium support it introduced in Opera 15.
Like most browsers, Opera has to go through a rapidly evolving development channel. Opera started its “fast release cycle” earlier this month with three different streams: stable, Next and developer.
Opera 16 is technically the latest stable version of Opera Next. According to developer Sebastian Baberowski, the next iteration of the browser, version 17, will switch from the development channel to the Next channel in the next one to two weeks.
Naturally, with the new browser build, the next developer build version 18 should show up in the developer channel in due time, giving users and web extension creators a rough and mostly experimental look at the browser’s future.
