Wanna see how to use Win 7 UAC to pwn a PC?
White hat hackers have created a proof of concept demo illustrating how improved User Account Control (UAC) features in Windows 7 might be completely bypassed.
The new Win7 UAC code-injection bypass can be used to elevate the rights of any command so that actions, even extreme steps such as thrashing a system, become an option. As such the demo goes beyond previous explorations of how UAC might be simply turned off.
UAC was introduced in Windows Vista as a security feature designed to prompt users for permission before allowing applications to run. Criticised as intrusive and annoying by some, Microsoft is working on a revamped version with increased granularity for Windows 7.
However, Microsoft inadvertently introduced a gaping security hole - disabling UAC no longer generates a prompt. Microsoft initially said this was a design feature but adverse publicity from security researchers forced it to promise it would make alterations.
The importance of these changes is illustrated by new research from Leo Davidson that showed hostile actions beyond simply disabling UAC might be carried out. Davidson's demo is similar to earlier work on how the Windows 7 UAC flaw might be used to silently elevate malware access but goes a step further because it omits ungainly SendKeys or RunDll32 tricks.
Davidson told El Reg that it took him longer to create demonstration videos than to figure out how to turn a "copy a file" concept into a potential "own the machine" technique.
Davidson has created two videos, one showing how Win7's COM elevation works and the second showing "code completely hosing a machine without a UAC prompt" (here).
However security watchers note that the approach only works if prospective victims are tricked into downloading and executing a malicious Trojan package. Achieve that and anything becomes possible.
Thomas Kristensen, CTO at security notification firm Secunia, explained "This isn't a major issue; after all it requires that the user already downloaded some executable code and decided to run it. No matter which security features have been built into the operating system, then the user should never run code, which they don't trust in the first place. Untrusted code should only be run on dedicated test systems."
Secunia has not confirmed the validity of the proof of concept demo but was able to say the demo looked authentic and ought to be addressed before the final version of Windows 7 ships.
"UAC should only be considered an extra security feature, which will remind users that the code they run potentially could harm their systems - it is not meant as a guarantee against code's ability to harm a system," Secunia's Kristensen added. ®

Sponsored: 
Following Bottomline’s journey to the Hybrid Cloud

