Docker Hub security dissed, dodgy container image data damned
At DockerCon in San Francisco on Wednesday, CEO Steve Singh highlighted security as one of Docker's core principles.
Only a day earlier, Germany-based security software development shop Kromtech suggested security wasn't a priority for the code containerizer.
Over the past twelve months, Kromtech explained in a blog post, Docker Hub, the container maker's community image repository, hosted at least 17 malicious Docker images that were downloaded at least five million times.
These compromised container blueprints have been dealt with, but Kromtech sees Docker's decision to discontinue the free preview of Docker Security Scanning – a service the container biz provided for Docker Official Images on Docker Hub and for paid private repositories in Docker Cloud – as a sign of its disinterest in security.
"It seems that the Docker ecosystem is becoming more enterprise oriented and the responsibility for safe migration and further secure maintenance falls on ordinary developers," the software biz said.
“As with public repositories like GitHub, Docker Hub is there for the service of the community,” said David Lawrence, head of security at Docker, in a statement emailed to The Register.
“When dealing with open public repositories and open source code, we recommend that you follow a few best practices including: know the content author, scan images before running and use curated official images in Docker Hub and certified content in Docker Store whenever possible.”
Kromtech's assertion may not be entirely fair since Docker Security Scanning will still be available as a paid service for private repository subscribers. There's Docker Store for vetted images. And Docker says it aims to make scans available for public repositories and for teams and organizations, eventually.
But in appearing to prioritize payment over the security of its ecosystem, Docker risks being compared unfavorably to organizations like npm, which have stepped up security efforts in response to repeated problems with hosted JavaScript packages.
Container-related security woes aren't exclusive to Docker. Similar attacks have been documented on Kubernetes instances too. The most common goal has tended to be exploiting cloud-based code for crypto-mining.
Docker has been dogged by security concerns for most of its short existence. A research paper on the subject published last year found 180 vulnerabilities among 356,218 Docker Hub images and argued for adoption of more automated security update mechanisms.
At the same time, those close to the company have argued that vulnerability counts exaggerate the extent of the risk. Back in 2015, Jérôme Petazzoni, then a Docker engineer, explained that a significant fraction of vulnerable Docker Hub images were vulnerable by design.
The reason? Build repeatability. Images with outdated and unsafe versions of Linux or Windows may be retained to ensure containerized applications built with that OS version can be reproduced; such apps might not run on an updated OS.
"For ordinary users, just pulling a Docker image from the DockerHub is like pulling arbitrary binary data from somewhere, executing it, and hoping for the best without really knowing what’s in it," Kromtech contends.
It might also be argued that pretty much any software download involves hoping for the best, because code signing may not be reliable, automated malware scans in app stores don't catch everything, and platform providers may let developers pilfer private data undetected for years. ®

Sponsored: 
Following Bottomline’s journey to the Hybrid Cloud

