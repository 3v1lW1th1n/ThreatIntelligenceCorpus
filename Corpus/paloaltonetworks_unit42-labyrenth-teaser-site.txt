LabyREnth Teaser Site

We recently announced LabyREnth, the 2nd Annual Palo Alto Networks Capture the Flag (CTF) Challenge, will go live on June 9, 2017.  Like last year, the LabyREnth countdown page included a little teaser… Were you able to find it?  If not, don’t worry. We’ve added a link to the CTF information on the countdown page because we want to make sure everybody has a chance to see the information.  We’ll also show you how to solve the teaser in case you still want to try it out.
We’re giving away some amazing prizes this year! We’ve increased the amounts of all the cash prizes and the first person to solve all the challenge tracks will win $10,000.  We hope this will motivate lots of people in the security community to play, learn, and have fun.
 

Figure 1 Prize Information
In order to solve the teaser challenge, start out by navigating to the main labyrenth.com page.

If we pull up the developer tools for the page we can see that clicking anywhere in the body of the page will redirect us to a 404 page.  That is very unusual, so let’s follow that thread and see where our curiosity takes us.

Figure 3 Developer Tools Showing index.html
The 404 page looks like a standard Apache 404 page, but if we look at the developer tools for the page we can see there is a hidden input and javascript file named wat_do.js.  This is a similar technique used by the Priv8 web shell to hide the login.

Figure 4 404 Page with Hidden Input
When we look at the javascript we can see that it is obfuscated and uses an eval right away.  This is a common javascript obfuscation technique used by malware to evaluate the unpacked javascript code.  We can copy the original javascript and paste it into the developer tools console. Then we can change the eval to console.log in order to print the next layer.

Figure 5 console.log initial javascript
We can copy the output and put it into a text editor like Visual Code Studio to pretty up the javascript.  We can see that we have an xor decoding loop with dat_otha_boy and some_otha_stuff.  We can also see that dat_otha_boy is the users input and we are redirected to the output of the decoding loop.

Figure 6 2nd layer cleaned up javascript
We should ask ourselves: Why is dat_boy being set to the event.srcElement.id and never used?  Perhaps that is the boy we are actually looking for.  We can modify the javascript to print where we would be redirected to if dat_boy was used by pasting it into the developer tools console.  When we do that we get what looks like the correct resource: w3_sh0w_U_wUt_w3_g0000t.html.

Figure 7 Decoding the correct resource
We can put G3t$chW1fty into the hidden text box on the 404 page or go directly to the resource we decoded to get the fake web shell.  We can interact with the fake shell by typing help for the available commands.
The team has lots of surprises in store for the CTF that we think you will have fun with. Good luck and we hope to see you in the LabyREnth on June 9!

body.qzz-modal-active,html.qzz-modal-active{overflow:hidden!important;height:100%!important;max-height:100vh!important;width:100%!important;max-width:100%!important;position:relative!important;padding:0!important;margin:0!important}.quizz-container{min-height:1px}.qzz-modal-active *,.qzz-modal-active *:before,.qzz-modal-active *:after{-o-transform:none!important;-moz-transform:none!important;-ms-transform:none!important;-webkit-transform:none!important;transform:none!important;-o-animation:none!important;-moz-animation:none!important;-ms-animation:none!important;-webkit-animation:none!important;animation:none!important;-webkit-transform-style:flat!important;position:static!important;z-index:0!important;height:100%!important;overflow:visible!important;content:none!important}.qzz-modal-active iframe{min-height:101vh!important;width:100%!important;position:relative!important}.qzz-modal-active input{display:none!important}.quizz-container{width:auto!important;height:auto!important}.quiz-modal-close{display:none;position:fixed!important;font-family:'Helvetica Neue','Arial',sans-serif!important;top:0!important;right:24px!important;background:rgba(0,0,0,.7)!important;color:#EEEFF8!important;white-space:nowrap!important;border-radius:0 0 2px 2px!important;overflow:hidden!important;padding:0 12px!important;line-height:35px!important;font-size:12px!important;text-align:center!important;text-transform:uppercase!important;font-weight:700!important;height:auto!important;z-index:2147483647!important}.quiz-modal-close:hover{text-decoration:none!important;opacity:.9!important}body .qzz-is-active.quizz-container{background:rgba(34,36,38,.97)!important;position:fixed!important;top:0!important;left:0!important;bottom:0!important;right:0!important;width:100%;z-index:2147483646!important;overflow:auto!important;zoom:1;-webkit-overflow-scrolling:touch!important}.qzz-is-active .quiz-modal-content{width:100%!important;position:relative!important}.qzz-is-active .quiz-modal-content:before,.qzz-is-active .quiz-modal-content:after{display:block!important;content:initial!important}.qzz-is-active .quiz-modal-close{display:block!important;z-index:2147483647!important}.qzz-is-paused{position:relative!important;font-family:'Helvetica Neue','Arial',sans-serif}.qzz-is-paused:before{content:'';display:block;position:absolute;top:0;left:0;right:0;bottom:0;background:rgba(34,36,38,.5);z-index:1000001}.qzz-is-paused:after{font-size:14px;text-transform:uppercase;letter-spacing:.05em;font-weight:700;line-height:55px;-webkit-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);-o-transform:translate(-50%,-50%);transform:translate(-50%,-50%);color:rgba(107,120,133,1);background:#fff;border-radius:10000px;border:3px solid rgba(107,120,133,1);box-shadow:0 3px 4px rgba(34,36,38,.3);content:'Resume quiz';white-space:nowrap;display:block;left:50%;padding:0 26px;position:absolute;top:50%;z-index:1000002}.quiz-modal .fluid-width-video-wrapper[style]{padding-top:0!important;height:100%}.quiz-modal .fluid-width-video-wrapper iframe{width:100%!important;height:100%!important;position:static!important}.quiz-modal-content div{height:100%!important;width:100%!important;padding-bottom:initial!important}Close

Register for Ignite ’17 Security Conference 
Vancouver, BC June 12–15, 2017
Ignite ’17 Security Conference is a live, four-day conference designed for today’s security professionals. Hear from innovators and experts, gain real-world skills through hands-on sessions and interactive workshops, and find out how breach prevention is changing the security industry. Visit the Ignite website for more information on tracks, workshops and marquee sessions.

