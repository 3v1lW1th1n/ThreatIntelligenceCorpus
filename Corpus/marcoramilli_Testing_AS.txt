
Testing ASLR on Linux Kernel 2.6.38 and Lion




This morning I'd like to share some results on two Asynchronous Space Layout Randomization implementations: in particular on Linux Kernel 2.6.38 and on Darwin 11.2.0 Lion. I am not getting into the details about ASLR, I've been writing a lot in past blog posts and journal articles  about this topic ( for example here ), but I want to share a little study of their randomization. The goal of this early morning hour is to build a simple but relevant randomization statistic about these kernels, proving their differences.


I started by writing a simple program like the following one:

#include 
int main(int argc, char **argv)
{

 unsigned int ebp;
 asm("movl %%ebp, %0\n":"=r" (ebp));
 printf("Current ebp: 0x%x \n", ebp);
return 0;

}


It takes %ebp and prints it out. I run it one Million of times putting the results into a .txt file ready to be processed through my favorite spreadsheet. Here the results . More then one Million of tests only few duplicates, and very high entropy functions as shown following.











