Firefox to give all extensions their own process in January
The Mozilla Foundation has outlined plans to add more multi-process features to its Firefox browser.
Firefox has had limited multi-process capabilities since version 48, when they were added to enhance security and stability. This is basically a sandboxing play: Firefox's developers feel that if the core browser, each tab and the content it contains, extensions and things like JavaScript engines each have their own process, the browser's attack surface will reduce. Running things in different processes should also make the browser more stable: a dud web page will have less chance of pulling down the whole browser.
Firefox 49 added multi-process support for what the browsers developers call a “select set of well tested extensions.” Firefox 50 brought multiple processes to “a broader set of extensions, those whose authors have marked them as multi-process compatible.”
Now the browser's developers say that “In Firefox 51, if all testing goes according to plan, we’ll be enabling multi-process Firefox for users with extensions that are not explicitly marked as incompatible with multi-process Firefox.”
Mozillan Asa Dotzler has explained future multi-process plans as follows:
The second long term multi-process feature is security sandboxing. Security Sandboxing makes use of child processes as a security boundary. Sandboxing work begins in Firefox 50 with the introduction of our first Windows sandbox. This is an early, laying the groundwork sandbox and is not yet hardened. Over the next few releases, the sandbox will be added to Mac and Linux and will become more restrictive and protective.
Firefox 51 is due on January 24th, 2017. So unless you're willing to run nightly builds you'll have to wait before getting your paws on this multi-process fun. ®

Sponsored: 
Following Bottomline’s journey to the Hybrid Cloud

